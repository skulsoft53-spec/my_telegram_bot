import os
import random
from telegram import Update
from telegram.ext import ApplicationBuilder, MessageHandler, filters, ContextTypes

# ะะพั ะพัะฒะตัะฐะตั ัะพะปัะบะพ ััะพะผั ะฟะพะปัะทะพะฒะฐัะตะปั:
TARGET_USERNAME = "@Habib471"

# ะะตัะพััะฝะพััั ะพัะฒะตัะฐ (0.4 = 40%)
RESPONSE_CHANCE = 0.4

# ะะพััะธัะฝัะต ัะพะผะฐะฝัะธัะฝัะต ััะฐะทั ั ัะผะพะดะทะธ ๐
LOVE_PHRASES = [
    "ะขั โ ะบะฐะบ ัััะพ ะฟะพัะปะต ะดะพะปะณะพะน ะฝะพัะธ, ัะธัะฐั ะธ ััะฟะปะฐั ๐",
    "ะะพะณะดะฐ ัั ัะปัะฑะฐะตัััั, ะฒะตัั ะผะธั ะฑัะดัะพ ััะฐะฝะพะฒะธััั ะดะพะฑัะตะต ๐",
    "ะ ะบะฐะถะดะพะผ ะดััะฐะฝะธะธ ะผะพะธั ะผััะปะตะน ะถะธะฒััั ัั ๐ซ",
    "ะขั โ ัะฒะตั, ััะพ ะฝะต ะณะฐัะฝะตั ะดะฐะถะต ะฒ ัะฐะผัะต ััะผะฝัะต ะดะฝะธ ๐",
    "ะัะปะธ ะฑั ัะปะพะฒะฐ ะผะพะณะปะธ ะบะฐัะฐัััั, ั ะฑั ะพะฑะฝัะป ัะตะฑั ะบะฐะถะดัะผ ะธะท ะฝะธั ๐",
    "ะขั โ ะผัะทัะบะฐ ะผะพะตะณะพ ัะตัะดัะฐ, ะฝะตะถะฝะฐั ะธ ะฑะตัะบะพะฝะตัะฝะฐั ๐ต",
    "ะขะฒะพั ะธะผั โ ะบะฐะบ ััะฟะพั ะฒะตัะฝั ะฒ ัะตัะดัะต ๐ธ",
    "ะขั ะฝะฐะฟะพะปะฝัะตัั ัะธัะธะฝั ัะผััะปะพะผ, ะฐ ะผะพั ะดััั โ ัะฒะตัะพะผ โ๏ธ",
    "ะก ัะพะฑะพะน ะดะฐะถะต ะฒะตัะตั ะฟะพัั ะพ ะปัะฑะฒะธ ๐",
    "ะขั โ ะผะพะน ัะฐะผัะน ะบัะฐัะธะฒัะน ัะปััะฐะน ะฒ ะถะธะทะฝะธ ๐",
    "ะขะฒะพะธ ะณะปะฐะทะฐ โ ะผะพะน ัะฐะผัะน ะปัะฑะธะผัะน ะทะฐะบะฐั ๐",
    "ะขั โ ัััะพัะบะฐ, ะฝะฐะฟะธัะฐะฝะฝะฐั ััะดัะฑะพะน ะพ ะฝะตะถะฝะพััะธ โจ",
    "ะขั ัะพะณัะตะฒะฐะตัั ะดะฐะถะต ัะพะณะดะฐ, ะบะพะณะดะฐ ะผะพะปัะธัั ๐ญ",
    "ะก ะบะฐะถะดัะผ ะดะฝัะผ ั ะฒัั ะฑะพะปััะต ะฟะพะฝะธะผะฐั, ััะพ ะฑะตะท ัะตะฑั ะฝะต ะผะพะณั ๐",
    "ะขั โ ะฒะดะพั, ะฟะพัะปะต ะบะพัะพัะพะณะพ ะฝะต ัะพัะตััั ะฒัะดััะฐัั ๐",
    "ะะฐะถะดะพะต ัะฒะพั ัะปะพะฒะพ ะพััะฐะฒะปัะตั ัะปะตะด ะฒ ะผะพัะผ ัะตัะดัะต ๐ท",
    "ะขั โ ะบะฐะบ ะทะฒะตะทะดะฐ, ััะพ ะพัะฒะตัะฐะตั ะผะพั ะฒัะตะปะตะฝะฝัั ๐ซ",
    "ะก ะปัะฑะพะฒัั ะบ ัะตะฑะต ะฒัั ััะฐะปะพ ััะฝะตะต, ัะฒะตัะปะตะต, ัะธัะต ๐",
    "ะขั โ ะผะพะน ัะผััะป, ะผะพะน ะฟะพะบะพะน ะธ ะผะพั ััะดะพ ๐",
    "ะัะปะธ ะฑั ะปัะฑะพะฒั ะธะผะตะปะฐ ะธะผั โ ะพะฝะฐ ะทะฒะฐะปะฐัั ะฑั ัะพะฑะพะน ๐",
]

# ะะพะทะผะพะถะฝัะต ะฟะพะดะฟะธัะธ ะพั ะะฟะฐัะธ
SIGNATURES = [
    "ะะฟะฐัะธ ัะตะฑั ะปัะฑะธั โค๏ธ",
    "ะก ะปัะฑะพะฒัั, ัะฒะพะน ะะฟะฐัะธ ๐",
    "ะขั ะฒ ัะตัะดัะต ะะฟะฐัะธ ะฝะฐะฒัะตะณะดะฐ ๐",
    "ะะพะปัะฑะธ ะะฟะฐัะธ, ะบะฐะบ ะพะฝ ัะตะฑั ๐",
    "ะั ะะฟะฐัะธ ั ัะตะฟะปะพะผ ๐",
]

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message = update.message
    if not message or not message.from_user:
        return

    # ะัะพะฒะตััะตะผ: ัะพะพะฑัะตะฝะธะต ะพั ะฝัะถะฝะพะณะพ ะฟะพะปัะทะพะฒะฐัะตะปั ะธ ะฒ ะณััะฟะฟะต
    if message.chat.type in ["group", "supergroup"] and message.from_user.username == TARGET_USERNAME[1:]:
        if random.random() <= RESPONSE_CHANCE:
            phrase = random.choice(LOVE_PHRASES)
            signature = random.choice(SIGNATURES)
            response = f"{phrase}\n\n{signature}"
            await message.reply_text(response)

def main():
    BOT_TOKEN = os.environ.get("8456574639:AAH29cxmqD-aQxHRZFZijYBaqjRWbiAEM_w")
    if not BOT_TOKEN:
        print("โ ะัะธะฑะบะฐ: ะฟะตัะตะผะตะฝะฝะฐั BOT_TOKEN ะฝะต ะฝะฐะนะดะตะฝะฐ.")
        return

    app = ApplicationBuilder().token(BOT_TOKEN).build()
    app.add_handler(MessageHandler(filters.ALL, handle_message))
    print("๐ LoveBot by Apachi ะทะฐะฟััะตะฝ ะธ ะถะดัั ัะพะพะฑัะตะฝะธะน...")
    app.run_polling()

if __name__ == "__main__":
    main()