import os
import threading
import asyncio
from http.server import BaseHTTPRequestHandler, HTTPServer
from telegram import Update
from telegram.ext import ApplicationBuilder, MessageHandler, CommandHandler, filters, ContextTypes
import random

# üîë –¢–æ–∫–µ–Ω
TELEGRAM_TOKEN = os.environ.get("TELEGRAM_TOKEN")
if not TELEGRAM_TOKEN:
    raise RuntimeError("–û—à–∏–±–∫–∞: –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è TELEGRAM_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!")
print("‚úÖ TELEGRAM_TOKEN –Ω–∞–π–¥–µ–Ω, –±–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")

# ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏
TARGET_USERNAMES = ["Habib471"]
SIGNATURE_USER = "Habib471"
SIGNATURE_TEXT = "–ü–æ–ª—é–±–∏ –ê–ø–∞—á–∏, –∫–∞–∫ –æ–Ω —Ç–µ–±—è üíû"
OWNER_USERNAME = "bxuwy"
bot_active = True
last_messages = {}

# üîí –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á
MAX_CONCURRENT_TASKS = 10
task_semaphore = asyncio.Semaphore(MAX_CONCURRENT_TASKS)

# üìå –•—Ä–∞–Ω–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ –¥–ª—è —Ç—Ä–æ–ª–ª–∏–Ω–≥–∞
saved_troll_template = None
troll_stop = False

# üíñ –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Ñ—Ä–∞–∑ –¥–ª—è —Ç—Ä–æ–ª–ª–∏–Ω–≥–∞
TROLL_WORDS = [
    "–¢—ã –º–Ω–µ –¥–æ—Ä–æ–≥", "–Ø —Ä–∞–¥, —á—Ç–æ —Ç—ã –µ—Å—Ç—å", "–¢—ã –æ—Å–æ–±–µ–Ω–Ω–∞—è", "–¢—ã –º–æ–π —á–µ–ª–æ–≤–µ–∫",
    "–° —Ç–æ–±–æ–π —Å–ø–æ–∫–æ–π–Ω–æ", "–¢—ã –ø—Ä–æ—Å—Ç–æ —Å—á–∞—Å—Ç—å–µ", "–¢—ã –¥–µ–ª–∞–µ—à—å –¥–µ–Ω—å –ª—É—á—à–µ", "–¢—ã –≤–∞–∂–Ω–∞",
    "–¢—ã –º–æ–π —É—é—Ç", "–¢—ã –∫–∞–∫ —Å–≤–µ—Ç", "–¢—ã –¥–µ–ª–∞–µ—à—å –º–µ–Ω—è –ª—É—á—à–µ", "–° —Ç–æ–±–æ–π –≤—Å—ë –ø–æ-–¥—Ä—É–≥–æ–º—É",
    "–¢—ã –º–æ—è —Ä–∞–¥–æ—Å—Ç—å", "–¢—ã –º–æ–π —Å–≤–µ—Ç–ª—ã–π —á–µ–ª–æ–≤–µ–∫", "–¢—ã –º–æ—ë –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ", "–¢—ã –ø—Ä–æ—Å—Ç–æ –ø—Ä–µ–∫—Ä–∞—Å–Ω–∞",
    "–¢—ã –º–æ–π —Å–≤–µ—Ç –≤ –ª—é–±–æ–π –¥–µ–Ω—å", "–¢—ã —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ –∑–∞–º–µ–Ω–∏—Ç—å", "–¢—ã –º–æ—ë –≤—Å—ë", "–¢—ã –¥—ã—Ö–∞–Ω–∏–µ –º–æ–∏—Ö —á—É–≤—Å—Ç–≤",
    "–¢—ã —á–∞—Å—Ç—å –º–æ–µ–≥–æ –º–∏—Ä–∞", "–¢—ã –Ω–µ–∂–Ω–æ—Å—Ç—å –º–æ–µ–≥–æ —Å–µ—Ä–¥—Ü–∞", "–¢—ã –º–æ—ë —É—Ç—Ä–æ –∏ –º–æ–π –ø–æ–∫–æ–π", "–¢—ã —á—É–¥–æ, –ø–æ–¥–∞—Ä–µ–Ω–Ω–æ–µ —Å—É–¥—å–±–æ–π",
    "–¢—ã –Ω–∞–ø–æ–ª–Ω—è–µ—à—å –∂–∏–∑–Ω—å —Å–º—ã—Å–ª–æ–º", "–¢—ã –º–æ–π –ø–æ–∫–æ–π –≤ —à—É–º–Ω–æ–º –º–∏—Ä–µ", "–° —Ç–æ–±–æ–π —Ö–æ—á–µ—Ç—Å—è –∂–∏—Ç—å",
    "–¢—ã –¥–µ–ª–∞–µ—à—å –º–µ–Ω—è —Å—á–∞—Å—Ç–ª–∏–≤—ã–º", "–¢—ã ‚Äî –º–æ—ë –Ω–∞—Å—Ç–æ—è—â–µ–µ", "–¢—ã ‚Äî –ª—É—á—à–µ–µ, —á—Ç–æ —Å–æ –º–Ω–æ–π —Å–ª—É—á–∞–ª–æ—Å—å",
    "–¢—ã –∫–∞–∫ —Å–æ–ª–Ω—Ü–µ –ø–æ—Å–ª–µ –¥–æ–∂–¥—è", "–¢—ã –¥–∞—Ä–∏—à—å —Ç–µ–ø–ª–æ –¥–∞–∂–µ –º–æ–ª—á–∞–Ω–∏–µ–º", "–¢—ã ‚Äî –º–æ—è –≥–∞—Ä–º–æ–Ω–∏—è", "–¢—ã ‚Äî –º–æ–π –¥–æ–º",
    "–¢—ã –≤—Å–µ–≥–¥–∞ –≤ –º–æ–∏—Ö –º—ã—Å–ª—è—Ö", "–¢—ã ‚Äî –ø—Ä–∏—á–∏–Ω–∞ –º–æ–µ–≥–æ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è", "–¢—ã –ø—Ä–∏–Ω–æ—Å–∏—à—å —Å–≤–µ—Ç —Ç—É–¥–∞, –≥–¥–µ —Ç–µ–º–Ω–æ",
    "–¢—ã ‚Äî –º–æ–π —Å–∞–º—ã–π –Ω–µ–∂–Ω—ã–π —á–µ–ª–æ–≤–µ–∫", "–¢—ã –¥–∞—ë—à—å –º–Ω–µ —Å–∏–ª—ã", "–¢—ã ‚Äî –º–æ–π —É—é—Ç –∏ –ø–æ–∫–æ–π", "–° —Ç–æ–±–æ–π –≤—Å—ë –∏–º–µ–µ—Ç —Å–º—ã—Å–ª",
    "–¢—ã –Ω–∞–ø–æ–ª–Ω—è–µ—à—å –º–µ–Ω—è —Ä–∞–¥–æ—Å—Ç—å—é", "–¢—ã ‚Äî –º–æ–π —Å–º—ã—Å–ª", "–¢—ã ‚Äî —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—á–µ—Ç—Å—è –±–µ—Ä–µ—á—å",
    "–¢—ã ‚Äî —Å—á–∞—Å—Ç—å–µ, –æ –∫–æ—Ç–æ—Ä–æ–º —è –Ω–µ –ø—Ä–æ—Å–∏–ª, –Ω–æ –ø–æ–ª—É—á–∏–ª", "–¢—ã ‚Äî –º–æ–π —Ç–∏—Ö–∏–π —Ä–∞–π", "–¢—ã ‚Äî –º–æ–π –¥–µ–Ω—å –∏ –º–æ—è –Ω–æ—á—å",
    "–¢—ã ‚Äî –Ω–µ–∂–Ω–æ—Å—Ç—å, –≤ –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—á–µ—Ç—Å—è –æ—Å—Ç–∞—Ç—å—Å—è", "–¢—ã ‚Äî —Å–∞–º–∞—è –¥–æ–±—Ä–∞—è —á–∞—Å—Ç—å –º–æ–µ–≥–æ —Å–µ—Ä–¥—Ü–∞",
    "–¢—ã –¥–µ–ª–∞–µ—à—å –∂–∏–∑–Ω—å —è—Ä—á–µ", "–¢—ã ‚Äî —á–µ–ª–æ–≤–µ–∫, —Å –∫–æ—Ç–æ—Ä—ã–º —Ö–æ—á–µ—Ç—Å—è –≤—Å—ë", "–¢—ã ‚Äî –º–æ–π –≤–¥–æ—Ö–Ω–æ–≤–∏—Ç–µ–ª—å",
    "–¢—ã ‚Äî —á–µ–ª–æ–≤–µ–∫, —Ä–∞–¥–∏ –∫–æ—Ç–æ—Ä–æ–≥–æ —Å—Ç–æ–∏—Ç –∂–∏—Ç—å", "–¢—ã ‚Äî –º–æ–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Å–≤–µ—Ç", "–¢—ã ‚Äî –º–æ—ë —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ –≤ —ç—Ç–æ–º –º–∏—Ä–µ",
    "–¢—ã ‚Äî –º–µ—á—Ç–∞, —Å—Ç–∞–≤—à–∞—è —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å—é", "–¢—ã ‚Äî —Å–∞–º–æ–µ —Ç—ë–ø–ª–æ–µ —á—É–≤—Å—Ç–≤–æ –≤–æ –º–Ω–µ",
    "–¢—ã ‚Äî —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä–æ–º—É –º–æ–∂–Ω–æ –¥–æ–≤–µ—Ä–∏—Ç—å —Å–µ—Ä–¥—Ü–µ", "–¢—ã ‚Äî –º–æ–π –Ω–µ–∂–Ω—ã–π —à—Ç–æ—Ä–º",
    "–¢—ã ‚Äî —á–µ–ª–æ–≤–µ–∫, —Ä—è–¥–æ–º —Å –∫–æ—Ç–æ—Ä—ã–º –≤—Å—ë —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –≤–æ–∑–º–æ–∂–Ω—ã–º", "–¢—ã ‚Äî –º–æ–π —Å–∞–º—ã–π —Ü–µ–Ω–Ω—ã–π —á–µ–ª–æ–≤–µ–∫",
    "–¢—ã ‚Äî –ø—Ä–∏—á–∏–Ω–∞ –º–æ–µ–≥–æ —Å—á–∞—Å—Ç—å—è", "–¢—ã ‚Äî —á–µ–ª–æ–≤–µ–∫, —Å –∫–æ—Ç–æ—Ä—ã–º –≤—Ä–µ–º—è –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è",
    "–¢—ã ‚Äî –º–æ–π –Ω–µ–∂–Ω—ã–π —Å–≤–µ—Ç", "–¢—ã ‚Äî —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä–æ–≥–æ —è –Ω–µ —Ö–æ—á—É —Ç–µ—Ä—è—Ç—å", "–¢—ã ‚Äî –¥—ã—Ö–∞–Ω–∏–µ –º–æ–µ–π –¥—É—à–∏",
    "–¢—ã ‚Äî —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä—ã–π –¥–µ–ª–∞–µ—Ç –º–∏—Ä –∫—Ä–∞—Å–∏–≤–µ–µ", "–¢—ã ‚Äî –º–æ—ë –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ –∏ –ø–æ–∫–æ–π –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ",
    "–¢—ã ‚Äî –Ω–µ–∂–Ω–æ—Å—Ç—å, –∫–æ—Ç–æ—Ä–æ–π –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç —ç—Ç–æ–º—É –º–∏—Ä—É", "–¢—ã ‚Äî —á–µ–ª–æ–≤–µ–∫, –±–µ–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ –¥–µ–Ω—å –Ω–µ–ø–æ–ª–Ω—ã–π",
    "–¢—ã ‚Äî –º–æ—è —Å–∞–º–∞—è –¥–æ–±—Ä–∞—è –º—ã—Å–ª—å",
    "–° —Ç–æ–±–æ–π –¥–∞–∂–µ —Ç–∏—à–∏–Ω–∞ –∑–≤—É—á–∏—Ç –∫—Ä–∞—Å–∏–≤–æ üí´",
    "–¢—ã ‚Äî –ø—Ä–∏—á–∏–Ω–∞ —É–ª—ã–±–∫–∏ –ê–ø–∞—á–∏ üíñ",
    "–ö–æ–≥–¥–∞ —Ç—ã —Ä—è–¥–æ–º, –≤–µ—Å—å –º–∏—Ä –¥–æ–±—Ä–µ–µ üå∏",
    "–¢—ã ‚Äî –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ –ê–ø–∞—á–∏ üíû",
    "–¢—ã ‚Äî —Å–≤–µ—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º –æ–Ω –∂–∏–≤—ë—Ç ‚òÄÔ∏è",
    "–¢—ã ‚Äî —á—É–≤—Å—Ç–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ–ø–∏—Å–∞—Ç—å —Å–ª–æ–≤–∞–º–∏ üíì",
    "–ê–ø–∞—á–∏ –ø—Ä–æ—Å—Ç–æ –≤–∏–¥–∏—Ç –≤ —Ç–µ–±–µ –æ—Å–æ–±–µ–Ω–Ω–æ–µ üåπ",
    "–¢—ã ‚Äî —Ç–æ—Ç —á–µ–ª–æ–≤–µ–∫, —Ä–∞–¥–∏ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—á–µ—Ç—Å—è –±—ã—Ç—å –ª—É—á—à–µ üí´",
    "–¢—ã ‚Äî –∏—Å–∫—Ä–µ–Ω–Ω–æ—Å—Ç—å, –∫–æ—Ç–æ—Ä—É—é –æ–Ω —Ü–µ–Ω–∏—Ç üíñ",
    "–ü–æ–ª—é–±–∏ –ê–ø–∞—á–∏, –∫–∞–∫ –æ–Ω —Ç–µ–±—è üíû"
]

# üåê –ú–∏–Ω–∏-—Å–µ—Ä–≤–µ—Ä
def run_web():
    class Handler(BaseHTTPRequestHandler):
        def do_GET(self):
            self.send_response(200)
            self.end_headers()
            self.wfile.write(b"LoveBot is running <3")
    port = int(os.environ.get("PORT", 10000))
    HTTPServer(("0.0.0.0", port), Handler).serve_forever()

threading.Thread(target=run_web, daemon=True).start()

# üí¨ –ö–æ–º–∞–Ω–¥—ã
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üíû –ü—Ä–∏–≤–µ—Ç! –Ø LoveBot by Apachi.\n"
        "–ö–æ–º–∞–Ω–¥—ã:\n"
        "/love ‚Äî –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å üíò\n"
        "/gift ‚Äî –ø–æ–¥–∞—Ä–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫ üéÅ\n"
        "/trollsave ‚Äî —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —à–∞–±–ª–æ–Ω üìù\n"
        "/troll ‚Äî –ø–µ—á–∞—Ç—å —à–∞–±–ª–æ–Ω–∞ –ª–µ—Å–µ–Ω–∫–æ–π ü™ú (—Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü)\n"
        "/trollstop ‚Äî –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç—Ä–æ–ª–ª–∏–Ω–≥–∞ üõë\n"
        "/on –∏ /off ‚Äî –≤–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –±–æ—Ç–∞ (—Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å)."
    )

# üíæ /trollsave
async def trollsave_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    global saved_troll_template
    if update.message.from_user.username != OWNER_USERNAME:
        await update.message.reply_text("üö´ –¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.")
        return
    saved_troll_template = "\n".join(TROLL_WORDS)
    await update.message.reply_text(f"‚úÖ –®–∞–±–ª–æ–Ω –¥–ª—è —Ç—Ä–æ–ª–ª–∏–Ω–≥–∞ —Å–æ—Ö—Ä–∞–Ω—ë–Ω. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫: {len(TROLL_WORDS)}")

# ü™ú /troll ‚Äî –ø–µ—á–∞—Ç—å –ª–µ—Å–µ–Ω–∫–æ–π
async def troll_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    global troll_stop
    if update.message.from_user.username != OWNER_USERNAME:
        await update.message.reply_text("üö´ –¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.")
        return
    if not saved_troll_template:
        await update.message.reply_text("‚ùå –ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π /trollsave")
        return

    async def send_ladder():
        global troll_stop
        async with task_semaphore:
            troll_stop = False
            message = update.message
            lines = saved_troll_template.split("\n")
            typed_text = ""
            for line in lines:
                if troll_stop:
                    await message.reply_text("üõë –¢—Ä–æ–ª–ª–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
                    return
                typed_text += line + "\n"
                try:
                    await message.edit_text(typed_text)
                except:
                    await message.reply_text(typed_text)
                await asyncio.sleep(0.1)

    asyncio.create_task(send_ladder())

# üõë /trollstop ‚Äî –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç—Ä–æ–ª–ª–∏–Ω–≥–∞
async def trollstop_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    global troll_stop
    if update.message.from_user.username != OWNER_USERNAME:
        await update.message.reply_text("üö´ –¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.")
        return
    troll_stop = True
    await update.message.reply_text("üõë –ö–æ–º–∞–Ω–¥–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞.")

# üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
def main():
    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("trollsave", trollsave_command))
    app.add_handler(CommandHandler("troll", troll_command))
    app.add_handler(CommandHandler("trollstop", trollstop_command))
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    app.run_polling()

if __name__ == "__main__":
    main()
