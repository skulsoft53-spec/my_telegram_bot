import os
import threading
import asyncio
import random
import time
import requests
from http.server import BaseHTTPRequestHandler, HTTPServer
from telegram import Update
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    filters,
    ContextTypes
)

# -----------------------
# üîë –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
# -----------------------
TELEGRAM_TOKEN = os.environ.get("TELEGRAM_TOKEN")
if not TELEGRAM_TOKEN:
    raise RuntimeError("–û—à–∏–±–∫–∞: TELEGRAM_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")

OWNER_ID = 8486672898
LOG_CHANNEL_ID = -1003107269526
bot_active = True
last_messages = {}

# -----------------------
# ‚ù§Ô∏è –†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
# -----------------------
LOVE_PHRASES = [
    "–¢—ã –º–Ω–µ –¥–æ—Ä–æ–≥", "–Ø —Ä–∞–¥, —á—Ç–æ —Ç—ã –µ—Å—Ç—å", "–¢—ã –æ—Å–æ–±–µ–Ω–Ω–∞—è",
    "–¢—ã –º–æ–π —á–µ–ª–æ–≤–µ–∫", "–¢—ã –¥–µ–ª–∞–µ—à—å –¥–µ–Ω—å –ª—É—á—à–µ", "–¢—ã –ø—Ä–æ—Å—Ç–æ —Å—á–∞—Å—Ç—å–µ",
    "–¢—ã –∫–∞–∫ —Å–≤–µ—Ç –≤ —Ç—É–º–∞–Ω–µ", "–¢—ã –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—à—å", "–¢—ã –≤–∞–∂–Ω–∞ –¥–ª—è –º–µ–Ω—è",
    "–¢—ã –º–æ–µ —á—É–¥–æ", "–¢—ã –Ω–∞–ø–æ–ª–Ω—è–µ—à—å –¥–µ–Ω—å —Ç–µ–ø–ª–æ–º", "–¢—ã –º–æ—è —Ä–∞–¥–æ—Å—Ç—å",
    "–° —Ç–æ–±–æ–π —Å–ø–æ–∫–æ–π–Ω–æ", "–¢—ã –ø—Ä–æ—Å—Ç–æ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–∞", "–¢—ã –º–æ–π —É—é—Ç", "–¢—ã –º–æ—ë –≤—Å—ë"
]
LOVE_LEVELS = [
    (0, 10, "üíî –õ—ë–¥ –º–µ–∂–¥—É —Å–µ—Ä–¥—Ü–∞–º–∏..."),
    (11, 25, "üåßÔ∏è –ï–¥–≤–∞ –∑–∞–º–µ—Ç–Ω–∞—è –∏—Å–∫—Ä–∞."),
    (26, 45, "üí´ –°–∏–º–ø–∞—Ç–∏—è —Ä–∞—Å—Ç—ë—Ç."),
    (46, 65, "üíû –ù–µ–∂–Ω–æ–µ –ø—Ä–∏—Ç—è–∂–µ–Ω–∏–µ."),
    (66, 80, "üíñ –°–µ—Ä–¥—Ü–∞ –±—å—é—Ç—Å—è –≤ —É–Ω–∏—Å–æ–Ω."),
    (81, 95, "üíò –≠—Ç–æ –ø–æ—á—Ç–∏ –ª—é–±–æ–≤—å."),
    (96, 100, "üíç –°—É–¥—å–±–∞ —Å–≤—è–∑–∞–ª–∞ –≤–∞—Å –Ω–∞–≤—Å–µ–≥–¥–∞."),
]

# -----------------------
# üíã GIF –¥–ª—è /kiss ‚Äî —Å–∞–º—ã–µ —Å—Ç—Ä–∞—Å—Ç–Ω—ã–µ
# -----------------------
KISS_GIFS = [
    "https://media.giphy.com/media/l0MYC0LajbaPoEADu/giphy.gif",  # –ø–æ—Ü–µ–ª—É–π –ø–æ–¥ –¥–æ–∂–¥–µ–º
    "https://media.giphy.com/media/MDJ9IbxxvDUQM/giphy.gif",      # —Å—Ç—Ä–∞—Å—Ç–Ω—ã–π –ø–æ—Ü–µ–ª—É–π
    "https://media.giphy.com/media/ZqlvCTNHpqrio/giphy.gif",      # —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –º–æ–º–µ–Ω—Ç
    "https://media.giphy.com/media/wnsgren9NtITS/giphy.gif",       # –º–µ–¥–ª–µ–Ω–Ω—ã–π –Ω–µ–∂–Ω—ã–π –ø–æ—Ü–µ–ª—É–π
    "https://media.giphy.com/media/12VXIxKaIEarL2/giphy.gif",     # —É–ª—ã–±–∫–∞ –∏ –Ω–µ–∂–Ω–æ—Å—Ç—å
    "https://media.giphy.com/media/FqBTvSNjNzeZG/giphy.gif",      # —Å—Ç—Ä–∞—Å—Ç—å –∏ –ª—é–±–æ–≤—å
    "https://media.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif", # —Å—Ç—Ä–∞—Å—Ç–Ω—ã–π –ø–æ—Ü–µ–ª—É–π –≤ –∑–∞—Å–æ—Å
    "https://media.giphy.com/media/l0ExncehJzexFpRHq/giphy.gif",  # –ø–æ—Ü–µ–ª—É–π –≤ –∑–∞—Å–æ—Å
    "https://media.giphy.com/media/3o7TKPZqzNRejT7Nko/giphy.gif", # –æ–±—ä—è—Ç–∏—è –∏ –ª—é–±–æ–≤—å
    "https://media.giphy.com/media/1BXa2alBjrCXC/giphy.gif",      # —Å—Ç—Ä–∞—Å—Ç–Ω—ã–µ –æ–±—ä—è—Ç–∏—è
]
HUG_GIFS = [
    "https://media.giphy.com/media/sUIZWMnfd4Mb6/giphy.gif",
    "https://media.giphy.com/media/od5H3PmEG5EVq/giphy.gif",
    "https://media.giphy.com/media/l2QDM9Jnim1YVILXa/giphy.gif",
    "https://media.giphy.com/media/143vPc6b08locw/giphy.gif",
    "https://media.giphy.com/media/3bqtLDeiDtwhq/giphy.gif",
    "https://media.giphy.com/media/XpgOZHuDfIkoM/giphy.gif",
    "https://media.giphy.com/media/1BXa2alBjrCXC/giphy.gif",  # —Å—Ç—Ä–∞—Å—Ç–Ω—ã–µ –æ–±—ä—è—Ç–∏—è
]
sent_kiss_gifs = set()
sent_hug_gifs = set()

# -----------------------
# üéÅ –ü–æ–¥–∞—Ä–∫–∏
# -----------------------
GIFTS_ROMANTIC = [
    "üíê –ë—É–∫–µ—Ç —Å–ª–æ–≤ –∏ –Ω–µ–º–Ω–æ–≥–æ –Ω–µ–∂–Ω–æ—Å—Ç–∏",
    "üç´ –®–æ–∫–æ–ª–∞–¥ –∏–∑ —á—É–≤—Å—Ç–≤–∞ —Å–∏–º–ø–∞—Ç–∏–∏",
    "üíé –û—Å–∫–æ–ª–æ–∫ –∑–≤–µ–∑–¥—ã —Å –Ω–µ–±–µ—Å"
]
GIFTS_FUNNY = [
    "üçï –û–¥–∏–Ω –∫—É—Å–æ—á–µ–∫ –ª—é–±–≤–∏ –∏ —Ç—Ä–∏ –∫—Ä–æ—à–∫–∏ –∑–∞–±–æ—Ç—ã",
    "üçü –ö–∞—Ä—Ç–æ—à–∫–∞ —Å —Å–æ—É—Å–æ–º —Å–∏–º–ø–∞—Ç–∏–∏",
    "‚òï –ß–∞—à–∫–∞ —Ç–µ–ø–ª–∞ –∏ –¥–æ–±—Ä—ã—Ö —á—É–≤—Å—Ç–≤"
]

# -----------------------
# üåê –ú–∏–Ω–∏-–≤–µ–±—Å–µ—Ä–≤–µ—Ä (Render ping)
# -----------------------
def run_web():
    class Handler(BaseHTTPRequestHandler):
        def do_GET(self):
            self.send_response(200)
            self.end_headers()
            self.wfile.write("LoveBot is alive üíñ".encode("utf-8"))
    port = int(os.environ.get("PORT", 10000))
    HTTPServer(("0.0.0.0", port), Handler).serve_forever()

threading.Thread(target=run_web, daemon=True).start()

# -----------------------
# üìú –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
# -----------------------
async def send_log(context: ContextTypes.DEFAULT_TYPE, text: str):
    try:
        if context and context.bot:
            await context.bot.send_message(chat_id=LOG_CHANNEL_ID, text=text)
    except Exception:
        print("LOG:", text)

# -----------------------
# üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —á–∞—Ç–æ–≤
# -----------------------
async def save_chat(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_chat:
        last_messages[update.effective_chat.id] = update.effective_chat.id

# -----------------------
# ‚öôÔ∏è –í–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ
# -----------------------
async def onbot(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await save_chat(update, context)
    global bot_active
    if update.effective_user.id != OWNER_ID:
        await update.message.reply_text("üö´ –¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –º–æ–∂–µ—Ç –≤–∫–ª—é—á–∏—Ç—å –±–æ—Ç–∞.")
        return
    bot_active = True
    await update.message.reply_text("üîî –ë–æ—Ç —Å–Ω–æ–≤–∞ –∞–∫—Ç–∏–≤–µ–Ω!")
    await send_log(context, "–ë–æ—Ç –≤–∫–ª—é—á—ë–Ω.")

async def offbot(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await save_chat(update, context)
    global bot_active
    if update.effective_user.id != OWNER_ID:
        await update.message.reply_text("üö´ –¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –º–æ–∂–µ—Ç –≤—ã–∫–ª—é—á–∏—Ç—å –±–æ—Ç–∞.")
        return
    bot_active = False
    await update.message.reply_text("‚ö†Ô∏è –ë–æ—Ç –æ—Ç–∫–ª—é—á—ë–Ω.")
    await send_log(context, "–ë–æ—Ç –æ—Ç–∫–ª—é—á—ë–Ω.")

# -----------------------
# üíã /kiss
# -----------------------
async def kiss_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await save_chat(update, context)
    if not bot_active or update.message is None:
        return
    args = update.message.text.split(maxsplit=1)
    if len(args) < 2:
        await update.message.reply_text("üòò –ò—Å–ø–æ–ª—å–∑—É–π: /kiss @username ‚Äî —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ—Ü–µ–ª—É–π –∏–ª–∏ –æ–±—ä—è—Ç–∏–µ üíã")
        return

    sender = update.effective_user.username or update.effective_user.first_name
    target = args[1].replace("@", "")
    action = random.choice(["kiss", "hug"])
    if action == "kiss":
        gifs, sent_set, emoji, text = KISS_GIFS, sent_kiss_gifs, "üíã", "–ø–æ—Ü–µ–ª—É–π"
    else:
        gifs, sent_set, emoji, text = HUG_GIFS, sent_hug_gifs, "ü§ó", "–æ–±—ä—è—Ç–∏–µ"

    available = list(set(gifs) - sent_set)
    if not available:
        sent_set.clear()
        available = gifs.copy()
    gif = random.choice(available)
    sent_set.add(gif)

    await update.message.reply_text(f"{emoji} @{sender} –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç @{target} {text}...")
    await asyncio.sleep(0.5)
    await update.message.reply_animation(gif)
    await asyncio.sleep(0.5)
    phrase = random.choice([
        "üíû –ú–µ–∂–¥—É –≤–∞–º–∏ –ø—Ä–æ–±–µ–∂–∞–ª–∞ –∏—Å–∫—Ä–∞ –Ω–µ–∂–Ω–æ—Å—Ç–∏!",
        "üíñ –õ—é–±–æ–≤—å –≤–∏—Ç–∞–µ—Ç –≤ –≤–æ–∑–¥—É—Ö–µ!",
        "üå∏ –¢–µ–ø–ª–æ –∏ –Ω–µ–∂–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–ø–ª–µ–ª–∏—Å—å –≤–º–µ—Å—Ç–µ.",
        "üí´ –ü—É—Å—Ç—å —ç—Ç–æ—Ç –º–æ–º–µ–Ω—Ç –¥–ª–∏—Ç—Å—è –≤–µ—á–Ω–æ!",
        "üî• –°–µ—Ä–¥—Ü–∞ –±—å—é—Ç—Å—è –≤ —É–Ω–∏—Å–æ–Ω.",
    ])
    await context.bot.send_message(chat_id=update.effective_chat.id, text=phrase)
    await send_log(context, f"/kiss: @{sender} -> @{target} ({text})")

# -----------------------
# üíò /love
# -----------------------
async def love_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await save_chat(update, context)
    if not bot_active or update.message is None:
        return
    args = update.message.text.split(maxsplit=1)
    if len(args) < 2:
        await update.message.reply_text("üíò –ò—Å–ø–æ–ª—å–∑—É–π: /love @username ‚Äî —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å üíû")
        return
    target = args[1].replace("@", "")
    sender = update.effective_user.username or update.effective_user.first_name
    love_percent = random.randint(0, 100)
    level_text = next(text for low, high, text in LOVE_LEVELS if low <= love_percent <= high)
    phrase = random.choice(LOVE_PHRASES)
    msg = f"üíñ –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –º–µ–∂–¥—É @{sender} –∏ @{target}: {love_percent}%\n{level_text}\n‚ú® {phrase}"
    await update.message.reply_text(msg)
    await send_log(context, f"/love: @{sender} ‚ù§Ô∏è @{target} = {love_percent}%")

# -----------------------
# üéÅ /gift
# -----------------------
async def gift_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await save_chat(update, context)
    if not bot_active or update.message is None:
        return
    args = update.message.text.split(maxsplit=1)
    if len(args) < 2:
        await update.message.reply_text("üéÅ –ò—Å–ø–æ–ª—å–∑—É–π: /gift @username ‚Äî —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫ üíå")
        return
    sender = update.effective_user.username or update.effective_user.first_name
    target = args[1].replace("@", "")
    gift = random.choice(GIFTS_ROMANTIC + GIFTS_FUNNY)
    await update.message.reply_text(f"üéÅ @{sender} –¥–∞—Ä–∏—Ç @{target}: {gift}")
    await send_log(context, f"/gift: @{sender} üéÅ @{target}")

# -----------------------
# üöÄ /start
# -----------------------
async def start_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_chat.type != "private":
        return
    await update.message.reply_text(
        "üíû –ü—Ä–∏–≤–µ—Ç! –Ø LoveBot üíñ\n"
        "–ö–æ–º–∞–Ω–¥—ã:\n"
        "/love <@username> ‚Äî –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å üíò\n"
        "/gift <@username> ‚Äî –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫ üéÅ\n"
        "/kiss <@username> ‚Äî –ø–æ—Ü–µ–ª—É–π –∏–ª–∏ –æ–±—ä—è—Ç–∏–µ üíã\n"
        "/onbot /offbot ‚Äî –≤–∫–ª—é—á–∏—Ç—å –∏–ª–∏ –≤—ã–∫–ª—é—á–∏—Ç—å –±–æ—Ç–∞ (—Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü)\n"
        "/all <—Ç–µ–∫—Å—Ç> ‚Äî —Ä–∞—Å—Å—ã–ª–∫–∞ –≤—Å–µ–º (—Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü)"
    )

# -----------------------
# ‚ö†Ô∏è –û—à–∏–±–∫–∏
# -----------------------
async def error_handler(update: object, context: ContextTypes.DEFAULT_TYPE):
    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {context.error}")
    try:
        await context.bot.send_message(chat_id=LOG_CHANNEL_ID, text=f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {context.error}")
    except Exception:
        pass

# -----------------------
# üöÄ –ó–∞–ø—É—Å–∫
# -----------------------
if __name__ == "__main__":
    import telegram.error

    try:
        requests.get(f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/deleteWebhook")
        print("üßπ –°—Ç–∞—Ä—ã–π webhook —É–¥–∞–ª—ë–Ω (Render —Ä–µ–∂–∏–º).")
    except Exception as e:
        print(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å webhook: {e}")

    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()

    app.add_handler(CommandHandler("start", start_cmd))
    app.add_handler(CommandHandler("onbot", onbot))
    app.add_handler(CommandHandler("offbot", offbot))
    app.add_handler(CommandHandler("kiss", kiss_cmd))
    app.add_handler(CommandHandler("love", love_cmd))
    app.add_handler(CommandHandler("gift", gift_cmd))
    app.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), save_chat))
    app.add_error_handler(error_handler)

    print("‚úÖ LoveBot –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É!")

    while True:
        try:
            print("üíû LoveBot –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–æ–º–∞–Ω—Ç–∏–∫–µ!")
            app.run_polling()
        except telegram.error.Conflict:
            print("‚ö†Ô∏è –ö–æ–Ω—Ñ–ª–∏–∫—Ç: –¥—Ä—É–≥–æ–π —ç–∫–∑–µ–º–ø–ª—è—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç. –ü–æ–≤—Ç–æ—Ä —á–µ—Ä–µ–∑ 3 —Å–µ–∫...")
            time.sleep(3)
            try:
                requests.get(f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/deleteWebhook")
            except Exception:
                pass
            continue
        except Exception as e:
            print(f"üí• –û—à–∏–±–∫–∞: {e}")
            time.sleep(5)
