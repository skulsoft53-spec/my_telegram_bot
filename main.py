import os
import threading
import asyncio
import random
from http.server import BaseHTTPRequestHandler, HTTPServer
from telegram import Update
from telegram.ext import (
    ApplicationBuilder, CommandHandler, MessageHandler,
    filters, ContextTypes
)

# -----------------------
# üîë –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
# -----------------------
TELEGRAM_TOKEN = os.environ.get("TELEGRAM_TOKEN")
if not TELEGRAM_TOKEN:
    raise RuntimeError("–û—à–∏–±–∫–∞: TELEGRAM_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")

OWNER_ID = 8486672898
LOG_CHANNEL_ID = -1003107269526
bot_active = True
last_messages = {}

# ‚ù§Ô∏è –†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
LOVE_PHRASES = [
    "–¢—ã –º–Ω–µ –¥–æ—Ä–æ–≥", "–Ø —Ä–∞–¥, —á—Ç–æ —Ç—ã –µ—Å—Ç—å", "–¢—ã –æ—Å–æ–±–µ–Ω–Ω–∞—è",
    "–¢—ã –º–æ–π —á–µ–ª–æ–≤–µ–∫", "–¢—ã –¥–µ–ª–∞–µ—à—å –¥–µ–Ω—å –ª—É—á—à–µ", "–¢—ã –ø—Ä–æ—Å—Ç–æ —Å—á–∞—Å—Ç—å–µ",
    "–¢—ã –∫–∞–∫ —Å–≤–µ—Ç –≤ —Ç—É–º–∞–Ω–µ", "–¢—ã –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—à—å", "–¢—ã –≤–∞–∂–Ω–∞ –¥–ª—è –º–µ–Ω—è",
    "–¢—ã –º–æ–µ —á—É–¥–æ", "–¢—ã –Ω–∞–ø–æ–ª–Ω—è–µ—à—å –¥–µ–Ω—å —Ç–µ–ø–ª–æ–º", "–¢—ã –º–æ—è —Ä–∞–¥–æ—Å—Ç—å",
    "–° —Ç–æ–±–æ–π —Å–ø–æ–∫–æ–π–Ω–æ", "–¢—ã –ø—Ä–æ—Å—Ç–æ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–∞", "–¢—ã –º–æ–π —É—é—Ç", "–¢—ã –º–æ—ë –≤—Å—ë"
]
SPECIAL_PHRASES = [
    "–° —Ç–æ–±–æ–π –¥–∞–∂–µ —Ç–∏—à–∏–Ω–∞ –∑–≤—É—á–∏—Ç –∫—Ä–∞—Å–∏–≤–æ üí´",
    "–¢—ã ‚Äî –ø—Ä–∏—á–∏–Ω–∞ —á—å–µ–π-—Ç–æ —É–ª—ã–±–∫–∏ üíñ",
]
LOVE_JOKES = [
    "–¢—ã –∫–∞–∫ Wi-Fi ‚Äî —Ä—è–¥–æ–º, –∏ –≤—Å—ë –∏–¥–µ–∞–ª—å–Ω–æ üòÑ",
    "–¢—ã –∫–∞–∫ Telegram Premium ‚Äî –Ω–µ–¥–æ—Å—Ç–∏–∂–∏–º–∞, –Ω–æ –ø—Ä–µ–∫—Ä–∞—Å–Ω–∞ üíé",
]
LOVE_LEVELS = [
    (0, 10, "üíî –õ—ë–¥ –º–µ–∂–¥—É —Å–µ—Ä–¥—Ü–∞–º–∏..."),
    (11, 25, "üåßÔ∏è –ï–¥–≤–∞ –∑–∞–º–µ—Ç–Ω–∞—è –∏—Å–∫—Ä–∞."),
    (26, 45, "üí´ –°–∏–º–ø–∞—Ç–∏—è —Ä–∞—Å—Ç—ë—Ç."),
    (46, 65, "üíû –ù–µ–∂–Ω–æ–µ –ø—Ä–∏—Ç—è–∂–µ–Ω–∏–µ."),
    (66, 80, "üíñ –°–µ—Ä–¥—Ü–∞ –±—å—é—Ç—Å—è –≤ —É–Ω–∏—Å–æ–Ω."),
    (81, 95, "üíò –≠—Ç–æ –ø–æ—á—Ç–∏ –ª—é–±–æ–≤—å."),
    (96, 100, "üíç –°—É–¥—å–±–∞ —Å–≤—è–∑–∞–ª–∞ –≤–∞—Å –Ω–∞–≤—Å–µ–≥–¥–∞."),
]

# -----------------------
# üåê –ú–∏–Ω–∏-–≤–µ–±—Å–µ—Ä–≤–µ—Ä (–¥–ª—è Render)
# -----------------------
def run_web():
    class Handler(BaseHTTPRequestHandler):
        def do_GET(self):
            self.send_response(200)
            self.end_headers()
            self.wfile.write("LoveBot is alive üíñ".encode("utf-8"))
    port = int(os.environ.get("PORT", 10000))
    HTTPServer(("0.0.0.0", port), Handler).serve_forever()

threading.Thread(target=run_web, daemon=True).start()

# -----------------------
# üìú –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
# -----------------------
async def send_log(context: ContextTypes.DEFAULT_TYPE, text: str):
    try:
        if context and context.bot:
            await context.bot.send_message(chat_id=LOG_CHANNEL_ID, text=text)
    except Exception:
        print("LOG:", text)

# -----------------------
# ‚öôÔ∏è –í–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ –±–æ—Ç–∞
# -----------------------
async def onbot(update: Update, context: ContextTypes.DEFAULT_TYPE):
    global bot_active
    if update.effective_user.id != OWNER_ID:
        await update.message.reply_text("üö´ –¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –º–æ–∂–µ—Ç –≤–∫–ª—é—á–∞—Ç—å –±–æ—Ç–∞.")
        return
    bot_active = True
    await update.message.reply_text("üîî –ë–æ—Ç —Å–Ω–æ–≤–∞ –∞–∫—Ç–∏–≤–µ–Ω!")
    await send_log(context, "–ë–æ—Ç –≤–∫–ª—é—á—ë–Ω.")

async def offbot(update: Update, context: ContextTypes.DEFAULT_TYPE):
    global bot_active
    if update.effective_user.id != OWNER_ID:
        await update.message.reply_text("üö´ –¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –º–æ–∂–µ—Ç –≤—ã–∫–ª—é—á–∞—Ç—å –±–æ—Ç–∞.")
        return
    bot_active = False
    await update.message.reply_text("‚ö†Ô∏è –ë–æ—Ç –æ—Ç–∫–ª—é—á—ë–Ω. –û—Ç–≤–µ—á–∞–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ –∫–æ–º–∞–Ω–¥—ã.")
    await send_log(context, "–ë–æ—Ç –æ—Ç–∫–ª—é—á—ë–Ω.")

# -----------------------
# üíå /love ‚Äî –º–æ—â–Ω–∞—è –≤–µ—Ä—Å–∏—è
# -----------------------
async def love_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message is None or not bot_active:
        return
    try:
        args = update.message.text.split(maxsplit=1)
        initiator = update.effective_user.username or update.effective_user.first_name
        target = args[1].replace("@", "") if len(args) > 1 else initiator

        score = random.randint(0, 100)
        bar_len = 20
        filled = score * bar_len // 100
        hearts = "‚ù§Ô∏è" * (filled // 2)
        bars = hearts + "üñ§" * (bar_len - len(hearts))

        # üîπ –í—Å—Ç—É–ø–ª–µ–Ω–∏–µ
        await update.message.reply_text("üíò –û–ø—Ä–µ–¥–µ–ª—è–µ–º —É—Ä–æ–≤–µ–Ω—å –ª—é–±–≤–∏...")
        await asyncio.sleep(0.5)

        # üîπ –ê—Ç–º–æ—Å—Ñ–µ—Ä–∞
        atmosphere = random.choice([
            "‚ú® –°—É–¥—å–±–∞ —Å–æ–µ–¥–∏–Ω—è–µ—Ç —Å–µ—Ä–¥—Ü–∞...",
            "üíû –õ—é–±–æ–≤—å –≤–∏—Ç–∞–µ—Ç –≤ –≤–æ–∑–¥—É—Ö–µ...",
            "üåπ –°–µ—Ä–¥—Ü–∞ –±—å—é—Ç—Å—è –≤—Å—ë —á–∞—â–µ...",
            "üî• –ú–µ–∂–¥—É –≤–∞–º–∏ –∏—Å–∫—Ä–∞...",
        ])
        await context.bot.send_message(chat_id=update.effective_chat.id, text=atmosphere)
        await asyncio.sleep(0.7)

        # üîπ –†–µ–∑—É–ª—å—Ç–∞—Ç
        result_text = f"üíû @{initiator} üíñ @{target}\nüíò –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å: {score}%\n[{bars}]"
        await context.bot.send_message(chat_id=update.effective_chat.id, text=result_text)
        await asyncio.sleep(0.5)

        # üîπ –§–∏–Ω–∞–ª —Å —ç–º–æ—Ü–∏—è–º–∏
        category = next((lbl for (lo, hi, lbl) in LOVE_LEVELS if lo <= score <= hi), "üíû –ù–µ–∂–Ω—ã–µ —á—É–≤—Å—Ç–≤–∞")
        phrase = random.choice(LOVE_PHRASES + LOVE_JOKES + SPECIAL_PHRASES)
        final_text = f"üíñ *{category}*\nüå∏ {phrase}\nüí¨ –ò—Å—Ç–∏–Ω–Ω–∞—è –ª—é–±–æ–≤—å –≤—Å–µ–≥–¥–∞ –Ω–∞–π–¥—ë—Ç –ø—É—Ç—å üí´"
        await context.bot.send_message(chat_id=update.effective_chat.id, text=final_text, parse_mode="Markdown")

        await send_log(context, f"/love: @{initiator} -> @{target} = {score}%")
    except Exception as e:
        print("–û—à–∏–±–∫–∞ /love:", e)
        await send_log(context, f"–û—à–∏–±–∫–∞ /love: {e}")

# -----------------------
# üéÅ /gift ‚Äî —ç—Ñ—Ñ–µ–∫—Ç–Ω–∞—è –≤–µ—Ä—Å–∏—è
# -----------------------
async def gift_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message is None or not bot_active:
        return

    args = update.message.text.split(maxsplit=1)
    if len(args) < 2:
        await update.message.reply_text("üéÅ –ò—Å–ø–æ–ª—å–∑—É–π: /gift @username")
        return

    giver = update.effective_user.username or update.effective_user.first_name
    target = args[1].replace("@", "")

    gifts_common = ["üç´ –®–æ–∫–æ–ª–∞–¥ –∏–∑ —Å–ª–∞–¥–∫–∏—Ö —á—É–≤—Å—Ç–≤", "üíê –ë—É–∫–µ—Ç —É—Ç—Ä–µ–Ω–Ω–µ–π –Ω–µ–∂–Ω–æ—Å—Ç–∏", "üçì –ö–æ—Ä–æ–±–∫–∞ –ø–æ—Ü–µ–ª—É–µ–≤", "üïØ –°–≤–µ—á–∞ —Ç–µ–ø–ª–∞ –∏ –∑–∞–±–æ—Ç—ã"]
    gifts_rare = ["üíé –û—Å–∫–æ–ª–æ–∫ –∑–≤–µ–∑–¥—ã, —Å–∏—è—é—â–∏–π –∫–∞–∫ —Ç—ã", "üåô –õ—É—á –ª—É–Ω–Ω–æ–≥–æ —Å–≤–µ—Ç–∞ –≤ –±–∞–Ω–æ—á–∫–µ", "üíå –ü–∏—Å—å–º–æ –∏–∑ –±—É–¥—É—â–µ–≥–æ, –≥–¥–µ –≤—ã –≤–º–µ—Å—Ç–µ"]
    gifts_legendary = ["üî• –°–µ—Ä–¥—Ü–µ —Ñ–µ–Ω–∏–∫—Å–∞ ‚Äî –≤–µ—á–Ω–∞—è —Å—Ç—Ä–∞—Å—Ç—å", "üåå –í—Å–µ–ª–µ–Ω–Ω–∞—è, –≤ –∫–æ—Ç–æ—Ä–æ–π –≤—ã –≤–¥–≤–æ—ë–º", "üíû –õ—é–±–æ–≤—å, –∫–æ—Ç–æ—Ä–∞—è –Ω–µ –∑–Ω–∞–µ—Ç –∫–æ–Ω—Ü–∞"]

    rarity = random.choices(["common", "rare", "legendary"], [70, 25, 5])[0]
    if rarity == "legendary":
        gift = random.choice(gifts_legendary)
        color = "‚ú®"
    elif rarity == "rare":
        gift = random.choice(gifts_rare)
        color = "üíé"
    else:
        gift = random.choice(gifts_common)
        color = "üéÄ"

    animation_frames = [
        f"üéÅ @{giver} –≥–æ—Ç–æ–≤–∏—Ç –ø–æ–¥–∞—Ä–æ–∫ –¥–ª—è @{target}...",
        f"{color*2} @{giver} –Ω–µ—Å—ë—Ç –ø–æ–¥–∞—Ä–æ–∫... {color*2}",
        f"üí´ –ü–æ–¥–∞—Ä–æ–∫ —Ä–∞—Å–∫—Ä—ã–≤–∞–µ—Ç—Å—è... üí´",
        f"üíñ @{giver} –¥–∞—Ä–∏—Ç @{target}: \n{gift}",
    ]

    msg = await update.message.reply_text(animation_frames[0])
    for frame in animation_frames[1:]:
        await asyncio.sleep(0.7)
        try:
            await msg.edit_text(frame)
        except Exception:
            pass

    if rarity in ["rare", "legendary"]:
        extra_effect = random.choice([
            "üåπ –ü—É—Å—Ç—å —ç—Ç–æ—Ç –º–æ–º–µ–Ω—Ç –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –≤ —Å–µ—Ä–¥—Ü–µ –Ω–∞–≤—Å–µ–≥–¥–∞.",
            "üíû –ú–∏—Ä –∑–∞–º–∏—Ä–∞–µ—Ç, –∫–æ–≥–¥–∞ –ª—é–±–æ–≤—å –≥–æ–≤–æ—Ä–∏—Ç –±–µ–∑ —Å–ª–æ–≤.",
            "üåà –≠—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –ø–æ–¥–∞—Ä–æ–∫ ‚Äî —ç—Ç–æ –∫—É—Å–æ—á–µ–∫ –¥—É—à–∏.",
            "üî• –û–≥–æ–Ω—å —Å—Ç—Ä–∞—Å—Ç–∏ –≤—Å–ø—ã—Ö–Ω—É–ª —è—Ä—á–µ —Å–æ–ª–Ω—Ü–∞!",
        ])
        await asyncio.sleep(1)
        try:
            await context.bot.send_message(chat_id=update.effective_chat.id, text=extra_effect)
        except Exception:
            pass

    await send_log(context, f"/gift: @{giver} -> @{target} ({gift}) [{rarity}]")

# -----------------------
# üí¨ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
# -----------------------
async def handle_messages(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message is None:
        return
    try:
        last_messages[update.message.chat.id] = update.message.chat.id
    except Exception:
        pass
    if not bot_active:
        return

# -----------------------
# üöÄ –ó–∞–ø—É—Å–∫
# -----------------------
if __name__ == "__main__":
    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()

    # –∫–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    app.add_handler(CommandHandler("onbot", onbot))
    app.add_handler(CommandHandler("offbot", offbot))

    # —Ä–æ–º–∞–Ω—Ç–∏–∫–∞
    app.add_handler(CommandHandler("love", love_cmd))
    app.add_handler(CommandHandler("gift", gift_cmd))

    # –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
    app.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), handle_messages))

    print("‚úÖ LoveBot –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–æ–º–∞–Ω—Ç–∏–∫–µ üíû")
    app.run_polling()
