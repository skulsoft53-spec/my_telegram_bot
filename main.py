import os
import random
import threading
from http.server import BaseHTTPRequestHandler, HTTPServer
from telegram import Update
from telegram.ext import ApplicationBuilder, MessageHandler, CommandHandler, filters, ContextTypes

# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏, –∫–æ—Ç–æ—Ä—ã–º –±–æ—Ç –æ—Ç–≤–µ—á–∞–µ—Ç
TARGET_USERNAMES = ["Habib471"]  # —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å

# –†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ —Ñ—Ä–∞–∑—ã (–±–µ–∑ —ç–º–æ–¥–∑–∏)
LOVE_PHRASES = [
    "–¢—ã –º–æ—ë –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ, –Ω–µ–∂–Ω–æ–µ –∫–∞–∫ –¥—ã—Ö–∞–Ω–∏–µ –≤–µ—Å–Ω—ã",
    "–° —Ç–æ–±–æ–π –≤—Å—ë –≤–æ–∫—Ä—É–≥ –Ω–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è —Å–º—ã—Å–ª–æ–º",
    "–¢—ã –º–æ—è –º–µ–ª–æ–¥–∏—è —Å—á–∞—Å—Ç—å—è, —Ç–∏—Ö–∞—è –∏ –≤–µ—á–Ω–∞—è",
    "–í –∫–∞–∂–¥–æ–º –ª—É—á–µ —Å–æ–ª–Ω—Ü–∞ —è –≤–∏–∂—É —Ç–≤–æ–π —Å–≤–µ—Ç",
    "–¢—ã —à—ë–ø–æ—Ç –Ω–µ–∂–Ω–æ—Å—Ç–∏ –≤ —à—É–º–µ –º–∏—Ä–∞",
    "–ö–∞–∂–¥–∞—è –º—ã—Å–ª—å –æ —Ç–µ–±–µ –∫–∞–∫ —É—Ç—Ä–µ–Ω–Ω–∏–π —Ä–∞—Å—Å–≤–µ—Ç",
    "–° —Ç–æ–±–æ–π –¥–∞–∂–µ —Ç–∏—à–∏–Ω–∞ –∑–≤—É—á–∏—Ç –ø—Ä–µ–∫—Ä–∞—Å–Ω–µ–µ",
    "–¢—ã –¥—ã—Ö–∞–Ω–∏–µ —Å–≤–µ—Ç–∞ –≤ –º–æ—ë–º —Å–µ—Ä–¥—Ü–µ",
    "–í —Ç–≤–æ–∏—Ö –≥–ª–∞–∑–∞—Ö —Å–ø—Ä—è—Ç–∞–Ω–æ –Ω–µ–±–æ –∏ —Ç–µ–ø–ª–æ",
    "–¢—ã –º–µ—á—Ç–∞, –∫–æ—Ç–æ—Ä–∞—è —Å—Ç–∞–ª–∞ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å—é",
    "–° —Ç–æ–±–æ–π –¥–∞–∂–µ –≤–µ—Ç–µ—Ä –¥—ã—à–∏—Ç –ª—é–±–æ–≤—å—é",
    "–¢—ã –ø—Ä–∏—á–∏–Ω–∞ —É–ª—ã–±–∞—Ç—å—Å—è –±–µ–∑ –ø—Ä–∏—á–∏–Ω—ã",
    "–¢–≤–æ—ë –∏–º—è –∑–≤—É—á–∏—Ç –∫–∞–∫ –Ω–µ–∂–Ω–∞—è –ø–µ—Å–Ω—è",
    "–¢—ã —Å–≤–µ—Ç–ª–∞—è –º—ã—Å–ª—å –≤–æ –≤—Å–µ—Ö –º–æ–∏—Ö –¥–Ω—è—Ö",
    "–ö–æ–≥–¥–∞ —Ç—ã —Ä—è–¥–æ–º, –≤—Å—ë –æ—Å—Ç–∞–ª—å–Ω–æ–µ —Ç–µ—Ä—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ",
    "–¢—ã –º–æ–π –¥–æ–º, –≥–¥–µ –ø–æ–∫–æ–π –∏ —Ç–µ–ø–ª–æ",
    "–ö–∞–∂–¥–∞—è –≤—Å—Ç—Ä–µ—á–∞ —Å —Ç–æ–±–æ–π –º–∞–ª–µ–Ω—å–∫–æ–µ —á—É–¥–æ",
    "–¢—ã —É—Ç—Ä–µ–Ω–Ω–∏–π –ª—É—á –≤ –º–æ—ë–º —Å–µ—Ä–¥—Ü–µ",
    "–° —Ç–æ–±–æ–π –¥–∞–∂–µ –∑–≤—ë–∑–¥—ã —Å–∏—è—é—Ç —è—Ä—á–µ",
    "–¢—ã –∫–∞–ø–ª—è –ª—é–±–≤–∏ –≤ –æ–∫–µ–∞–Ω–µ –∂–∏–∑–Ω–∏",
    "–¢—ã –≤–¥–æ—Ö, –±–µ–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ –¥—ã—à—É",
    "–í —Ç–≤–æ–∏—Ö –≥–ª–∞–∑–∞—Ö —Ü–µ–ª–∞—è –≤—Å–µ–ª–µ–Ω–Ω–∞—è –Ω–µ–∂–Ω–æ—Å—Ç–∏",
    "–¢—ã —Å–ª–æ–≤–æ —Å—á–∞—Å—Ç—å–µ, –Ω–∞–ø–∏—Å–∞–Ω–Ω–æ–µ —Å–≤–µ—Ç–æ–º",
    "–¢—ã –º–æ–π —è–∫–æ—Ä—å –∏ –º–æ–π –ø–æ–ª—ë—Ç –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ",
    "–¢—ã –º–æ–π —É—é—Ç –¥–∞–∂–µ –≤ —Å–∞–º—ã—Ö —Ö–æ–ª–æ–¥–Ω—ã—Ö –¥–Ω—è—Ö",
    "–¢–≤–æ—ë –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ –¥–µ–ª–∞–µ—Ç —ç—Ç–æ—Ç –º–∏—Ä –º—è–≥—á–µ",
    "–¢—ã —É–ª—ã–±–∫–∞ —Å—É–¥—å–±—ã, –∫–æ—Ç–æ—Ä—É—é —è –Ω–µ —Ö–æ—á—É —Ç–µ—Ä—è—Ç—å",
    "–¢—ã –∞—Ä–æ–º–∞—Ç –≤–µ—Å–Ω—ã –≤ –º–æ–∏—Ö –º—ã—Å–ª—è—Ö",
    "–° —Ç–æ–±–æ–π –º–∏—Ä –æ–±—Ä–µ—Ç–∞–µ—Ç —Ä–∏—Ñ–º—É –∏ –º—É–∑—ã–∫—É",
    "–¢—ã –º–æ–π –ª—É—á–∏–∫ –≤ –º–∏—Ä–µ —Å—É–º—Ä–∞–∫–æ–≤",
    "–¢—ã –Ω–µ–∂–Ω–æ—Å—Ç—å, –æ–±—Ä–µ—Ç—à–∞—è —Ñ–æ—Ä–º—É",
    "–ö–∞–∂–¥–æ–µ —É—Ç—Ä–æ —Å —Ç–æ–±–æ–π –ø—Ä–∞–∑–¥–Ω–∏–∫ –¥—É—à–∏",
    "–¢—ã —Ç–µ–ø–ª–æ, —á—Ç–æ –Ω–µ —É—Ö–æ–¥–∏—Ç –¥–∞–∂–µ –∑–∏–º–æ–π",
    "–¢—ã –º–æ–π —Å–º—ã—Å–ª –∏ –º–æ—è –ø—Ä–æ—Å—Ç–∞—è —Ä–∞–¥–æ—Å—Ç—å",
]

# –ü–æ–¥–ø–∏—Å—å
SIGNATURE = "–ü–æ–ª—é–±–∏ –ê–ø–∞—á–∏, –∫–∞–∫ –æ–Ω —Ç–µ–±—è"

# –ú–∏–Ω–∏-–≤–µ–±-—Å–µ—Ä–≤–µ—Ä (–¥–ª—è Render/Heroku)
def run_web():
    class Handler(BaseHTTPRequestHandler):
        def do_GET(self):
            self.send_response(200)
            self.end_headers()
            self.wfile.write(b"LoveBot is running")
    port = int(os.environ.get("PORT", 10000))
    HTTPServer(("0.0.0.0", port), Handler).serve_forever()

threading.Thread(target=run_web, daemon=True).start()

# –ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–ª–æ—Å—å
last_messages = {}

# /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø LoveBot by Apachi.\n"
        "–Ø –æ—Ç–≤–µ—á–∞—é –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.\n"
        "–ö–æ–º–∞–Ω–¥–æ–π /love –º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å!"
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message = update.message
    if not message or not message.from_user:
        return
    username = message.from_user.username
    if message.chat.type not in ["group", "supergroup"]:
        return

    if username in TARGET_USERNAMES and random.random() < 0.3:
        while True:
            phrase = random.choice(LOVE_PHRASES) + " üíû"
            if last_messages.get(username) != phrase:
                last_messages[username] = phrase
                break
        response = phrase + f"\n\n{SIGNATURE}"
        await message.reply_text(response, reply_to_message_id=message.message_id)

# –ö–æ–º–∞–Ω–¥–∞ /love
async def love_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message = update.message
    if not message or not message.text:
        return
    args = message.text.split(maxsplit=1)
    target = args[1] if len(args) > 1 else message.from_user.username
    score = random.randint(0, 100)
    await message.reply_text(f"üíû –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å {target}: {score}%")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    token = os.environ.get("TELEGRAM_TOKEN")
    if not token:
        print("–û—à–∏–±–∫–∞: —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ TELEGRAM_TOKEN")
        return
    app = ApplicationBuilder().token(token).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("love", love_command))
    app.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), handle_message))
    await app.run_polling()

if __name__ == "__main__":
    import asyncio
    asyncio.run(main())
