import os
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
from flask import Flask
import threading

TOKEN = "7998020401:AAG3D2cB4YTdxh7i2kjFXCT85wp16UV3lNU"

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

# Flask –¥–ª—è Render
server = Flask(__name__)

@server.route('/')
def home():
    return "Bot is running!"

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message_handler(commands=['start'])
async def start_cmd(message: types.Message):
    await message.answer("üëã –ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π —Å—Ç–∞–±–∏–ª—å–Ω—ã–π –±–æ—Ç.
–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/start - –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
/help - –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥
/info - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
/echo <—Ç–µ–∫—Å—Ç> - –ü–æ–≤—Ç–æ—Ä—é —Ç–≤–æ–π —Ç–µ–∫—Å—Ç")

# –ö–æ–º–∞–Ω–¥–∞ /help
@dp.message_handler(commands=['help'])
async def help_cmd(message: types.Message):
    await message.answer("üìå –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:
/start - –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
/help - –ü–æ–º–æ—â—å
/info - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–±–µ
/echo <—Ç–µ–∫—Å—Ç> - –ü–æ–≤—Ç–æ—Ä—é —Ç–≤–æ–π —Ç–µ–∫—Å—Ç")

# –ö–æ–º–∞–Ω–¥–∞ /info
@dp.message_handler(commands=['info'])
async def info_cmd(message: types.Message):
    user = message.from_user
    await message.answer(f"üë§ –¢–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ:
ID: {user.id}
–ò–º—è: {user.first_name}")

# –ö–æ–º–∞–Ω–¥–∞ /echo
@dp.message_handler(commands=['echo'])
async def echo_cmd(message: types.Message):
    text = message.text.replace('/echo', '').strip()
    if text:
        await message.answer(f"üîÅ {text}")
    else:
        await message.answer("‚ùå –í–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /echo")

def start_aiogram():
    executor.start_polling(dp, skip_updates=True)

def start_flask():
    server.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))

if __name__ == "__main__":
    threading.Thread(target=start_aiogram).start()
    start_flask()
